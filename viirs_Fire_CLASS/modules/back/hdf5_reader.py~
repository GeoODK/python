import 	h5py
import datetime
import glob
import os
class Hdf_Class():
	def __init__(self,hdf_file,output_file):
		self.file_name = hdf_file
		self.hdf = h5py.File(self.file_name, "r")
		self.group_attrs = self.hdf['Data_Products']['VIIRS-AF-EDR']['VIIRS-AF-EDR_Aggr'].attrs
		self.num_of_granules = self.group_attrs['AggregateNumberGranules'][0][0]
		self.output_file = output_file
		self.main()

	def main(self):
		op_file = open(self.output_file,"ab")
		index = self.num_of_granules
		for i in range(int(index)):
			date = self.get_date(str(i))
			year = date[:4]
			month = date[4:6]
			day =date[6:]
			time_utc =self.get_time(str(i))
			time =str(datetime.timedelta(seconds=float(time_utc)))
			#print time
			lat_group = self.hdf['All_Data']['VIIRS-AF-EDR_All']['Latitude']["Latitude_"+str(i)]
			lng_group = self.hdf['All_Data']['VIIRS-AF-EDR_All']['Longitude']["Longitude_"+str(i)]
			for j in range(len(lat_group)):
				op_string = str(year)+','+str(month)+','+str(time)+','+str(day)+','+str(lat_group[j])+','+str(lng_group[j])+'\n'
				op_file.write(op_string)
		op_file.close()

	def get_date(self,index):
		attrs = self.hdf['Data_Products']['VIIRS-AF-EDR']['VIIRS-AF-EDR_Gran_'+index].attrs
		date = attrs['Ending_Date'][0][0]
		return date
	def get_time(self,index):
		attrs = self.hdf['Data_Products']['VIIRS-AF-EDR']['VIIRS-AF-EDR_Gran_'+index].attrs
		time = attrs['Ending_Time'][0][0]
		return time[:6]

date_st =str (datetime.date.today()-datetime.timedelta(1)).replace("-","")
scratch_directory = "/home/jnordling/Class/scratch/"
output_file = "/home/jnordling/Class/"+date_st+"_fire.txt"
hdf_files = glob.glob(scratch_directory+"*.h5")
for i in hdf_files:
	print i
	process = Hdf_Class(i,output_file)
os.system("rm -rf "+scratch_directory+"*")
print 'Complete'
#files = Hdf_Class(fil,output_file)


#print files.get_lat_lng('1')

#f = h5py.File(path+"AVAFO_npp_d20140418_t0502191_e0507595_b12809_c20140418110759565194_noaa_ops.h5", "r")
#attrs  = f.attrs

#for i in f.attrs.items():
#	print i[0], i[1][0][0]

#group= f['Data_Products']['VIIRS-AF-EDR']['VIIRS-AF-EDR_Aggr']
#group_attrs= group.attrs
#group_items = group_attrs.items()
#print group_items['AggregateNumberGranules']
#for i in group_items:
#	print i[0], i[1][0][0]
#for i in group.items():
#	print i
#group = f.create_group("All_Data/VIIRS-AF-EDR_All")
#for g in group:
#	print g


#for i in f['Data_Products']['VIIRS-AF-EDR']['VIIRS-AF-EDR_Aggr']:
#	print i

